---
title: "Societal Benefit Repo full-text screening results"
author: "O'Hara"
format: 
  html:
    code-fold: true
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
editor: source
---

```{r setup}
library(tidyverse)
library(here)
```

# Summary

The 258 unique(?) documents with abstracts represented in the Societal Benefits repository were screened by title and abstract in Colandr.  The results were then full-text screened and tagged.  Here we examine the "includes" and compare them to the tags implemented in the original SBR.

# Data

The SBR information was downloaded as a .csv on 4/23/24, and uploaded to Colandr.  The screening criteria outlined in the planning/protocol document were used to determine inclusion/exclusion.  Some documents were tagged with additional information, e.g., "maybe" for some included documents that seemed like they may not actually meet the criteria.

The full-text screening results were saved as a .csv on 6/4/2024.

# Methods

## Read in the full-text screening results

Also, write out included refs with DOI for import into Zotero.

```{r}
sbr_df <- read_csv(here('_data/3_refs_clean/sbr_repo_cleaned_240423.csv')) %>%
  janitor::clean_names() %>%
  mutate(join_title = tolower(title) %>%
           str_remove_all(':.+spectroradiometer.+') %>%
           str_replace_all('[[:punct:]]', ' ') %>% 
           str_squish()) %>%
  select(-keywords, -year, -journal, repo_title = title, repo_author = author) %>%
  distinct()


sbr_results_df <- read_csv(here('_output/phase1_societal_benefits/fulltext_screened.csv')) %>%
  mutate(join_title = tolower(title) %>%
           str_remove_all(':.+australian.+') %>%
           str_remove_all(':.+spectroradiometer.+') %>%
           str_remove_all('in the usa$') %>%
           str_replace_all('[[:punct:]]', ' ') %>% 
           str_remove('isnet$') %>%
           str_squish()) %>%
  fuzzyjoin::stringdist_join(sbr_df, by = 'join_title', mode = 'left', 
                             distance_col = 'dist', max_dist = 5)

check <- sbr_results_df %>%
  filter(is.na(join_title.x) | is.na(join_title.y)) %>%
  select(contains('title'))

check2 <- sbr_results_df %>%
  filter(join_title.x != join_title.y) %>%
  select(contains('title'))
```

## Examine inclusion vs. tags

```{r}
unnest_vars <- function(df, vars) {
  for(v in vars) {
    df[[v]] <- df[[v]] %>% str_remove(';$') %>% str_split(';')
    df <- df %>%
      unnest(!!v)
    df[[v]] <- str_squish(df[[v]])
  }
  return(df)
}

ea_incl_df <- sbr_results_df %>%
  filter(screening_decision == 'Include') %>%
  select(title, author, year, econ_method:applied_science_theme, sba:ea) %>%
  unnest_vars(vars = c('econ_method', 'ea')) %>%
  mutate(ea = case_when(str_detect(ea, 'CGE') ~ 'Input-Output Analysis and CGE',
                        str_detect(ea, 'Econometrics') ~ 'Econometrics and Other Stats Methods',
                        TRUE ~ ea)) %>%
  mutate(econ_method = case_when(str_detect(econ_method, 'expert|stated') ~ 'expert elic/stated pref',
                        str_detect(econ_method, 'simulation') ~ 'simulation',
                        str_detect(econ_method, 'chain') ~ 'ben chain/value chain',
                        str_detect(econ_method, 'regression') ~ 'regression',
                        econ_method == 'voi' ~ 'voi/counterfactual',
                        TRUE ~ econ_method)) %>%
  distinct()

ea_incl_df %>%
  count(econ_method, ea) %>%
  filter(ea != 'NA' & !is.na(econ_method)) %>%
  ggplot(aes(x = econ_method, y = ea, fill = n)) +
    geom_tile() +
    scale_fill_viridis_c() +
    theme(axis.title = element_blank(),
          axis.text.x = element_text(angle = 45, hjust = 1))
```

## Frequency of methods in various Applied Science themes

```{r}

themes_df <- sbr_results_df %>%
  filter(screening_decision == 'Include') %>%
  select(title, author, year, econ_method, as_theme = applied_science_theme) %>%
  unnest_vars(vars = c('econ_method', 'as_theme')) %>%
  mutate(econ_method = case_when(str_detect(econ_method, 'expert|stated') ~ 'expert elic/stated pref',
                        str_detect(econ_method, 'simulation') ~ 'simulation',
                        str_detect(econ_method, 'chain') ~ 'ben chain/value chain',
                        str_detect(econ_method, 'regression') ~ 'regression',
                        econ_method == 'voi' ~ 'voi/counterfactual',
                        TRUE ~ econ_method)) %>%
  distinct()

various_themes <- themes_df$as_theme %>%
  unique() %>% 
  sort() %>% 
  .[. != 'various'] %>%
  paste(collapse = ';')

themes_df %>%
  ### for 'various' replace with all
  mutate(as_theme = ifelse(as_theme == 'various', various_themes, as_theme)) %>%
  unnest_vars('as_theme') %>%
  count(econ_method, as_theme) %>%
  filter(!is.na(as_theme) & !is.na(econ_method)) %>%
  ggplot(aes(x = econ_method, y = as_theme, fill = n)) +
    geom_tile() +
    scale_fill_viridis_c() +
    theme(axis.title = element_blank(),
          axis.text.x = element_text(angle = 45, hjust = 1))
```
