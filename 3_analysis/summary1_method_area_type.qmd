---
title: "Analysis: final include set"
author: "O'Hara"
format: 
  html:
    code-fold: true
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
editor: source
---

```{r setup}
library(tidyverse)
library(here)
library(ggforce) ### for geom_arc_bar
library(cowplot)
```

# Summary

Read in all the final "includes" and summarize by:

* year
* valuation method
* societal benefit area
* societal benefit type

For papers where two methods, societal benefit areas, or societal benefit types were coded, we will count each instance separately.  This may be a point of discussion - perhaps they are weighted to add up to a single instance?

# Methods

Read in coded data of included papers.

```{r}
includes_df <- readxl::read_excel(here('_data/screened_fulltext/ft_consolidated_coding.xlsx')) %>%
  janitor::clean_names()
```

## Single var plots

### Summarize by year

```{r}
year_df <- includes_df %>%
  mutate(year2 = str_extract(key, '[0-9]{4}$') %>% as.numeric())

year_sum_df <- year_df %>%
  group_by(year2) %>%
  summarize(n = n()) %>%
  mutate(y = year2 - min(year2) + 1)

log_year_lm <- lm(log(n) ~ y, data = year_sum_df)
r <- coef(log_year_lm)[2]
int <- exp(coef(log_year_lm)[1])

year_sum_df <- year_sum_df %>%
  mutate(pred = int + exp(r * y))

ggplot(year_sum_df, aes(x = year2, y = n)) +
  geom_col() +
  # geom_line(aes(y = pred), color = 'red') +
  labs(x = 'Year',
       y = 'Number of papers') +
  theme_minimal()
```

## Create plot dataframes


```{r}
deliberative_vec <- c('Participatory rural appraisal; rapid rural appraisal',
                      'Participant action research')
surveys_vec <- c('Surveys of preference assessments', 'Photo-elicitation surveys')

method_df <- includes_df %>%
  select(key, c(method_1, method_2)) %>%
  pivot_longer(-key, names_to = 'tmp', values_to = 'method') %>%
  filter(!is.na(method)) %>%
  mutate(method = str_squish(str_to_sentence(method)),
         method = case_when(method %in% deliberative_vec ~ 'Non-monetary methods - deliberative',
                            method %in% surveys_vec ~ 'Surveys of preference assessments',
                            TRUE ~ method)) %>%
  select(-tmp) %>%
  distinct()


soc_ben_df <- includes_df %>%
  select(key, starts_with(c('geoss', 'nasa'))) %>%
  pivot_longer(-key, names_to = 'tmp', values_to = 'sba') %>%
  filter(!is.na(sba)) %>%
  select(-tmp) %>%
  mutate(sba = str_squish(sba)) %>%
  mutate(sba = case_when(sba == 'Water' ~ 'Water Resources',
                         sba == 'Climate' ~ 'Climate & Resilience',
                         sba == 'Weather' ~ 'Climate & Resilience',
                         sba %in% c('Biodiversity', 'Ecosystems') ~ 'Ecological Conservation',
                         sba == 'Health' ~ 'Health & Air Quality',
                         TRUE ~ sba)) %>%
  distinct() %>%
  group_by(key) %>%
  filter(!(sba == '(other)' & any(sba != '(other)'))) %>%
  ungroup()


val_type_df <- includes_df %>%
  select(key, val_type = societal_benefit_type) %>%
  mutate(val_type = str_split(val_type, '[^A-z]')) %>%
  unnest(val_type) %>%
  mutate(val_type = str_trim(val_type),
         val_type = str_to_title(val_type)) %>%
  distinct()

val_type_cooccur <- val_type_df %>%
  arrange(val_type) %>%
  group_by(key) %>%
  summarize(v1 = first(val_type),
            v2 = ifelse(n() == 1, NA, last(val_type))) %>%
  group_by(v1, v2) %>%
  summarize(n = n(), .groups = 'drop')
```



## multi variable plots

### Method by value type: bar chart

```{r}
method_by_value_df <- method_df %>%
  left_join(val_type_df, by = 'key') %>%
  group_by(key) %>%
  mutate(val_wt = 1 / n_distinct(val_type),
         method_wt = 1/n_distinct(method)) %>%
  group_by(method, val_type) %>%
  summarize(n = sum(val_wt * method_wt)) %>%
  group_by(method) %>%
  mutate(n_tot = sum(n)) %>%
  ungroup() %>%
  mutate(method = fct_reorder(str_squish(method), n_tot),
         lbl = sprintf('%s (n = %s)', method, n_tot)) %>%
  mutate(val_type = factor(val_type, levels = c('Instrumental', 'Relational')))

method_value_proportions <- method_by_value_df %>%
  mutate(prop = n / n_tot) 

valtype_colors <- c('Instrumental'  = '#4B0055',
                    'Intrinsic'   = '#009B95', 
                    'Relational' = '#FDE333')
  
  
### high value labels on the bar; lower value to right of bar
df_hi <- method_by_value_df %>%
  filter(n_tot > max(n_tot) * .5) %>%
  select(method, lbl, n_tot) %>%
  distinct()
df_lo <- method_by_value_df %>%
  filter(n_tot <= max(n_tot) * .5) %>%
  select(method, lbl, n_tot) %>%
  distinct()

ggplot(method_by_value_df, aes(y = method, x = n)) +
  geom_col(aes(fill = val_type)) +
  # guides(fill = guide_legend(reverse = TRUE)) +
  geom_text(data = df_hi, aes(label = lbl, x = n_tot), color = 'white',
            hjust = 1, size = 3, nudge_x = -1) +
  geom_text(data = df_lo, aes(label = lbl, x = n_tot), color = 'black', 
            hjust = 0, size = 3, nudge_x = 1) +
  scale_x_continuous(expand = c(0, .01)) +
  scale_fill_manual(values = valtype_colors) +
  labs(x = 'Number of papers',
       y = 'Valuation method',
       fill = 'Value type') +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        panel.grid = element_blank(),
        legend.position = c(.75, .25))

```

Summaries:

```{r}
method_by_value_df %>% group_by(val_type) %>% summarize(n = sum(n))


```


### Method co occurrence

IDEA: color this in pie wedges by value type - maybe quarter wedges, radius by size, with an empty bottom quadrant containing the total number.

```{r}
method_vec <- levels(method_by_value_df$method) %>% rev()
  
quant <- c('Value of information', 'Cost-benefit analysis', 'Stated preference', 
           'Bayesian decision analysis', 'Econometric analysis', 
           'Real options analysis', 'Market price-based methods')

multi_methods_df <- method_df %>%
  mutate(method = factor(method, levels = method_vec)) %>%
  arrange(key, method) %>%
  group_by(key) %>%
  filter(n() > 1) %>%
  mutate(x = c('x', 'y')) %>%
  ungroup() 

method_types_sum <- multi_methods_df %>%
  mutate(method_type = ifelse(method %in% quant, 'Quantitative',
                              'Qualitative')) %>%
  group_by(key) %>%
  summarize(method = paste0(method, collapse = ';'),
            combo = case_when(all(method_type == 'Quantitative') ~ 'Quantitative',
                              all(method_type == 'Qualitative') ~ 'Qualitative',
                              TRUE ~ 'Mixed'),
                             .groups = 'drop') %>%
  group_by(combo) %>%
  summarize(n = n(), .groups = 'drop')

multi_methods_summarized <- multi_methods_df %>%
  pivot_wider(names_from = x, values_from = method) %>%
  left_join(val_type_df, by = 'key') %>%
  mutate(tmp = 1) %>%
  pivot_wider(names_from = val_type, values_from = tmp) %>%
  group_by(x, y) %>%
  summarize(tot = n(), .groups = 'drop',
            Instrumental = sum(Instrumental, na.rm = TRUE),
            Relational   = sum(Relational, na.rm = TRUE)) %>%
  complete(x = method_vec, y = method_vec, fill = list(n = NA)) %>%
  pivot_longer(cols = c(Instrumental, Relational), names_to = 'val_type', values_to = 'n') %>%
  mutate(x = factor(x, levels = method_vec),
         y = factor(y, levels = method_vec) %>% fct_rev(),
         val_type = factor(val_type, levels = c('Instrumental', 'Relational')))

arcs_df <- multi_methods_summarized %>%
  mutate(r = sqrt(n / max(n, na.rm = TRUE)) * .7, ### radius based on # of value type
         start = (as.integer(val_type) - 2) * (pi * .75) + pi/4,
         end   = (as.integer(val_type) - 1) * (pi * .75) + pi/4) %>%
  filter(!is.na(n)) %>%
  filter(r > 0) %>%
  select(x, y, r, start, end, val_type) %>%
  distinct()

diag_lbls <- multi_methods_summarized %>%
  filter(x == y) %>%
  select(x) %>%
  distinct() %>%
  mutate(lbl = str_replace(x, 'Value of information', 'VOI') %>%
           str_replace('Cost-benefit analysis', 'CBA') %>%
           str_replace('Semi-structured and in-depth interviews', 'Interviews') %>%
           str_replace('Surveys of preference assessments', 'Surveys')
         )

n_lbls <- multi_methods_summarized %>%
  select(x, y, tot) %>%
  distinct()


pnl <- ggplot() +
  ### geom_point to set up axis labels in order; color and size to render invisible
  geom_point(data = multi_methods_summarized, aes(x, y), size = 0, color = '#00000000') +
  ### add grid lines
  geom_segment(data = diag_lbls, aes(x = x, xend = x, y = 1, yend = 13 - as.integer(x)), 
               color = 'grey90', linewidth = .5) +
  geom_segment(data = diag_lbls, aes(y = x, yend = x, x = 0, xend = as.integer(x)), color = 'grey90', linewidth = .5) +
  geom_segment(data = diag_lbls, x = 1, y = 12, yend = 1, xend = 12, color = 'grey90', linewidth = .5) +
  ### add diagonal text
  geom_text(data = diag_lbls, aes(x = x, y = x, label = lbl),
            angle = 45, hjust = 0, vjust = .5, size = 3, nudge_y = .1, nudge_x = .1) +
  ### then geom_point again to write on top of the grid lines
  # geom_point(data = multi_methods_summarized, aes(x, y, color = tot, size = tot), show.legend = FALSE) +
  ### geom_arc_bar needs x and y in continuous - so convert categorical to integer
  geom_arc_bar(data = arcs_df,
               aes(x0 = as.integer(x), y0 = as.integer(y),
                   r0 = 0, r = r, start = start, end = end, fill = val_type),
               color = NA, show.legend = FALSE) +
  ### add number text
  geom_text(data = n_lbls, aes(x = x, y = y, label = tot),
            size = 2, hjust = 1, vjust = 1, nudge_x = -.05, nudge_y = -.05, color = 'black') +
  scale_fill_manual(values = valtype_colors) +
  scale_size(name = 'n', range = c(3, 10)) +
  scale_x_discrete(expand = expansion(add = c(0, 6))) +
  scale_y_discrete(expand = expansion(add = c(.5, 3))) +
  ### to maintain equal spacing horiz and vert
  coord_fixed() +
  labs(x = 'Valuation method 1',
       y = 'Valuation method 2',
       fill = 'Value type') +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(size = 8),
        axis.text.x = element_blank())

### Legend
legend_df <- multi_methods_summarized %>%
  group_by(val_type) %>%
  summarize(n = sum(n, na.rm = TRUE)) %>%
  mutate(r = sqrt(n / max(n, na.rm = TRUE)) * .6, ### radius based on # of value type
         lvl   = as.integer(val_type),
         start = (lvl - 2) * (pi * .75) + pi / 4,
         end   = (lvl - 1) * (pi * .75) + pi / 4) %>%
  mutate(lbl_x = 1 + c(-.1, .1),
         lbl_y = 1 + c(.1, .1),
         hjust = ifelse(lbl_x < 1, 1, -1))


lgd <- ggplot() +
  geom_arc_bar(data = legend_df,
               aes(x0 = 1, y0 = 1, r0 = 0, r = r, start = start, end = end, fill = val_type),
               color = NA, show.legend = FALSE) +
  geom_point(x = 1, y = 1, color = 'red', size = 5) +
  geom_text(label = 'N total', x = 1, y = 1, 
            size = 3, hjust = 1, vjust = 1, nudge_y = -.05, nudge_x = -.05) +
  scale_fill_manual(values = valtype_colors) +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_y_continuous(limits = c(0, 2), expand = c(0, 0)) +
  coord_fixed() +
  theme_void()

ggdraw() +
  draw_plot(pnl) +
  draw_plot(lgd, x = 0.75, y = 0.6, width = 0.2, height = 0.2) +
  draw_label('n total', x = 0.845, y = 0.695, size = 8, 
             hjust = 1, vjust = 1) +
  draw_label('Instrumental\n(n = 54)', x = 0.80, y = 0.78, size = 8, 
             hjust = 1, vjust = 1) +
  draw_label('Relational\n(n = 7)',   x = 0.875, y = 0.72, size = 8, 
             hjust = 0, vjust = 1) +
  draw_label('Value type',   x = 0.85, y = 0.8, size = 10, fontface = 'bold',
             hjust = .5, vjust = 0)
  
  
```



### Method by societal benefit area: heat map

```{r}
method_by_sba_df <- method_df %>%
  left_join(soc_ben_df, by = 'key') %>%
  group_by(key) %>%
  mutate(sba_wt = 1 / n_distinct(sba)) %>%
  mutate(method_wt = 1 / n_distinct(method)) %>%
  group_by(method, sba) %>%
  summarize(n = sum(sba_wt * method_wt)) %>%
  group_by(method) %>%
  mutate(n_tot = sum(n)) %>%
  ungroup() %>%
  mutate(method = fct_reorder(str_squish(method), n_tot),
         lbl = sprintf('%s (n = %s)', method, n_tot)) %>%
  mutate(sba = fct_reorder(sba, n_tot) %>% fct_relevel(c('(various)', '(other)'), after = Inf)) %>%
  mutate(method_type = ifelse(method %in% quant, 'Quantitative',
                              'Qualitative'))

method_type_by_sba_df <- method_by_sba_df %>%
  group_by(sba, method_type) %>%
  summarize(n = sum(n)) %>%
  group_by(sba) %>%
  mutate(p = n / sum(n))
  
  

ggplot(method_by_sba_df, aes(y = method, x = sba, fill = n)) +
  geom_tile() +
  # geom_text(aes(label = n), color = 'white') +
  scale_fill_viridis_c() +
  labs(x = 'Societal benefit area',
       y = 'Valuation method',
       fill = 'Number of papers') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave('heatmap.png')
```

### Societal benefit by value type: bar chart

```{r}
sba_by_value_df <- soc_ben_df %>%
  left_join(val_type_df, by = 'key') %>%
  group_by(key) %>%
  mutate(val_wt = 1 / n_distinct(val_type),
         sba_wt = 1 / n_distinct(sba)) %>%
  group_by(sba, val_type) %>%
  summarize(n = sum(val_wt * sba_wt)) %>%
  group_by(sba) %>%
  mutate(n_tot = sum(n)) %>%
  ungroup() %>%
  mutate(sba = fct_reorder(str_squish(sba), n_tot),
         lbl = sprintf('%s (n = %s)', sba, n_tot)) %>%
  mutate(val_type = factor(val_type, levels = c('Instrumental', 'Relational')))
  
### high value labels on the bar; lower value to right of bar
df_hi <- sba_by_value_df %>%
  filter(n_tot > max(n_tot) * .5) %>%
  select(sba, lbl, n_tot) %>%
  distinct() 
df_lo <- sba_by_value_df %>%
  filter(n_tot <= max(n_tot) * .5) %>%
  select(sba, lbl, n_tot) %>%
  distinct()

ggplot(sba_by_value_df, aes(y = sba, x = n)) +
  geom_col(aes(fill = val_type)) +
  # guides(fill = guide_legend(reverse = TRUE)) +
  geom_text(data = df_hi, aes(label = lbl, x = n_tot), color = 'white',
            hjust = 1, size = 3, nudge_x = -1) +
  geom_text(data = df_lo, aes(label = lbl, x = n_tot), color = 'black', 
            hjust = 0, size = 3, nudge_x = 1) +
  scale_x_continuous(expand = c(0, .01)) +
  scale_fill_manual(values = valtype_colors) +
  labs(x = 'Number of papers',
       y = 'Societal benefit area',
       fill = 'Value type') +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        panel.grid = element_blank(),
        legend.position = c(.75, .25))

```

### SBA co occurrence

IDEA: color this in pie wedges by value type - maybe quarter wedges, radius by size, with an empty bottom quadrant containing the total number.

```{r}
sba_vec <- soc_ben_df %>%
  group_by(sba) %>%
  summarize(n = n()) %>%
  mutate(sba = fct_reorder(sba, n)) %>%
  .$sba %>% levels() %>% rev()
  
multi_sba_df <- soc_ben_df %>%
  mutate(sba = factor(sba, levels = sba_vec)) %>%
  arrange(key, sba) %>%
  group_by(key) %>%
  filter(n() > 1) %>%
  mutate(x = c('x', 'y')) %>%
  ungroup() %>%
  pivot_wider(names_from = x, values_from = sba) %>%
  left_join(val_type_df, by = 'key') %>%
  mutate(tmp = 1) %>%
  pivot_wider(names_from = val_type, values_from = tmp) %>%
  group_by(x, y) %>%
  summarize(tot = n(), .groups = 'drop',
            Instrumental = sum(Instrumental, na.rm = TRUE),
            Relational   = sum(Relational, na.rm = TRUE)) %>%
  complete(x = sba_vec, y = sba_vec, fill = list(n = NA)) %>%
  pivot_longer(cols = c(Instrumental, Relational), names_to = 'val_type', values_to = 'n') %>%
  mutate(x = factor(x, levels = sba_vec),
         y = factor(y, levels = sba_vec) %>% fct_rev(),
         val_type = factor(val_type, levels = c('Instrumental', 'Relational')))

arcs_df <- multi_sba_df %>%
  mutate(r = sqrt(n / max(n, na.rm = TRUE)) * .6, ### radius based on # of value type
         start = (as.integer(val_type) - 2) * (pi * .75) + pi/4,
         end   = (as.integer(val_type) - 1) * (pi * .75) + pi/4) %>%
  filter(!is.na(n)) %>%
  filter(r > 0) %>%
  select(x, y, r, start, end, val_type) %>%
  distinct()

diag_lbls <- multi_sba_df %>%
  filter(x == y) %>%
  select(x) %>%
  distinct() %>%
  mutate(lbl = x)

n_lbls <- multi_sba_df %>%
  select(x, y, tot) %>%
  distinct()


pnl <- ggplot() +
  ### geom_point to set up axis labels in order; color and size to render invisible
  geom_point(data = multi_sba_df, aes(x, y), size = 0, color = '#00000000') +
  ### add grid lines
  geom_segment(data = diag_lbls, aes(x = x, xend = x, y = 1, yend = 11 - as.integer(x)), 
               color = 'grey90', linewidth = .5) +
  geom_segment(data = diag_lbls, aes(y = x, yend = x, x = 0, xend = as.integer(x)), color = 'grey90', linewidth = .5) +
  geom_segment(data = diag_lbls, x = 1, y = 10, yend = 1, xend = 10, color = 'grey90', linewidth = .5) +
  ### add diagonal text
  geom_text(data = diag_lbls, aes(x = x, y = x, label = lbl),
            angle = 45, hjust = 0, vjust = .5, size = 3, nudge_y = .1, nudge_x = .1) +
  ### then geom_point again to write on top of the grid lines
  # geom_point(data = multi_methods_summarized, aes(x, y, color = tot, size = tot), show.legend = FALSE) +
  ### geom_arc_bar needs x and y in continuous - so convert categorical to integer
  geom_arc_bar(data = arcs_df,
               aes(x0 = as.integer(x), y0 = as.integer(y),
                   r0 = 0, r = r, start = start, end = end, fill = val_type),
               color = NA, show.legend = FALSE) +
  ### add number text
  geom_text(data = n_lbls, aes(x = x, y = y, label = tot),
            size = 2, hjust = 1, vjust = 1, nudge_x = -.05, nudge_y = -.05, color = 'black') +
  scale_fill_manual(values = valtype_colors) +
  scale_size(name = 'n', range = c(3, 10)) +
  scale_x_discrete(expand = expansion(add = c(0, 6))) +
  scale_y_discrete(expand = expansion(add = c(.5, 3))) +
  ### to maintain equal spacing horiz and vert
  coord_fixed() +
  labs(x = 'Societal Benefit Area 1',
       y = 'Societal Benefit Area 2',
       fill = 'Value type') +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(size = 8),
        axis.text.x = element_blank())

### Legend
legend_df <- multi_sba_df %>%
  group_by(val_type) %>%
  summarize(n = sum(n, na.rm = TRUE)) %>%
  mutate(r = sqrt(n / max(n, na.rm = TRUE)) * .6, ### radius based on # of value type
         lvl   = as.integer(val_type),
         start = (lvl - 2) * (pi * .75) + pi / 4,
         end   = (lvl - 1) * (pi * .75) + pi / 4) %>%
  mutate(lbl_x = 1 + c(-.1, .1),
         lbl_y = 1 + c(.1, .1),
         hjust = ifelse(lbl_x < 1, 1, -1))


lgd <- ggplot() +
  geom_arc_bar(data = legend_df,
               aes(x0 = 1, y0 = 1, r0 = 0, r = r, start = start, end = end, fill = val_type),
               color = NA, show.legend = FALSE) +
  geom_point(x = 1, y = 1, color = 'red', size = 5) +
  geom_text(label = 'N total', x = 1, y = 1, 
            size = 3, hjust = 1, vjust = 1, nudge_y = -.05, nudge_x = -.05) +
  scale_fill_manual(values = valtype_colors) +
  scale_x_continuous(limits = c(0, 2), expand = c(0, 0)) +
  scale_y_continuous(limits = c(0, 2), expand = c(0, 0)) +
  coord_fixed() +
  theme_void()

ggdraw() +
  draw_plot(pnl) +
  draw_plot(lgd, x = 0.75, y = 0.6, width = 0.2, height = 0.2) +
  draw_label('n total', x = 0.845, y = 0.695, size = 8, 
             hjust = 1, vjust = 1) +
  draw_label('Instrumental\n(n = 44)', x = 0.80, y = 0.78, size = 8, 
             hjust = 1, vjust = 1) +
  draw_label('Relational\n(n = 10)',   x = 0.875, y = 0.72, size = 8, 
             hjust = 0, vjust = 1) +
  draw_label('Value type',   x = 0.85, y = 0.8, size = 10, fontface = 'bold',
             hjust = .5, vjust = 0)
  
  
```
