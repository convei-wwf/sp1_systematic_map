---
title: "Analysis: final include set"
author: "O'Hara"
format: 
  html:
    code-fold: true
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
editor: source
---

```{r setup}
library(tidyverse)
library(here)

```

# Summary

Read in all the final "includes" and summarize by:

* year
* valuation method
* societal benefit area
* societal benefit type
* study location

For papers where two methods, societal benefit areas, or societal benefit types were coded, we will count each instance separately.  This may be a point of discussion - perhaps they are weighted to add up to a single instance?

# Methods

Read in coded data of included papers.

```{r}
includes_df <- readxl::read_excel(here('_data/screened_fulltext/ft_consolidated_coding.xlsx'))
```

## Single var plots

### Summarize by year

```{r}
year_df <- includes_df %>%
  mutate(year2 = str_extract(key, '[0-9]{4}$') %>% as.numeric())

year_sum_df <- year_df %>%
  group_by(year2) %>%
  summarize(n = n()) %>%
  mutate(y = year2 - min(year2) + 1)

log_year_lm <- lm(log(n) ~ y, data = year_sum_df)
r <- coef(log_year_lm)[2]
int <- exp(coef(log_year_lm)[1])

year_sum_df <- year_sum_df %>%
  mutate(pred = int + exp(r * y))

ggplot(year_sum_df, aes(x = year2, y = n)) +
  geom_col() +
  geom_line(aes(y = pred), color = 'red') +
  labs(x = 'Year',
       y = 'Number of papers') +
  theme_minimal()
```

### Summarize by valuation method

```{r}
summarize_column <- function(df, col) {
  out_df <- df %>%
    rename(tmp = !!sym(col)) %>%
    mutate(tmp = str_squish(tmp)) %>%
    group_by(tmp) %>%
    summarize(n = n()) %>%
    mutate(lbl = sprintf('%s (n = %s)', tmp, n),
           tmp = fct_reorder(tmp, n)) %>%
    rename(!!col := tmp)
  return(out_df)
}


gen_plot <- function(df, col, varname, n_thresh = 0.5) {
  df <- df %>%
    rename(tmp = !!sym(col))
  
  ### high value labels on the bar; lower value to right of bar
  df_hi <- df %>%
    filter(n > max(n) * n_thresh)
  df_lo <- df %>%
    filter(n <= max(n) * n_thresh)
  
  p <- ggplot(df, aes(y = tmp, x = n)) +
    geom_col() +
    geom_text(data = df_hi, aes(label = lbl, x = n), color = 'white',
              hjust = 1, size = 3, nudge_x = -1) +
    geom_text(data = df_lo, aes(label = lbl, x = n), color = 'black', 
              hjust = 0, size = 3, nudge_x = 1) +
    scale_x_continuous(expand = c(0, .01)) +
    labs(x = 'Number of papers',
         y = varname) +
    theme_minimal() +
    theme(axis.text.y = element_blank())
  
  return(p)
}
```


```{r}
deliberative_vec <- c('Participatory rural appraisal; rapid rural appraisal',
                      'Participant action research')
surveys_vec <- c('Surveys of preference assessments', 'Photo-elicitation surveys')

method_df <- includes_df %>%
  select(key, c('method 1', 'method 2')) %>%
  # select(key, c('method 1')) %>%
  pivot_longer(-key, names_to = 'tmp', values_to = 'method') %>%
  filter(!is.na(method)) %>%
  mutate(method = str_squish(method),
         method = case_when(method %in% deliberative_vec ~ 'Non-monetary valuation methods - deliberative',
                            method %in% surveys_vec ~ 'Surveys of preference assessments',
                            TRUE ~ method)) %>%
  select(-tmp) %>%
  distinct()

method_summary <- method_df %>%
  summarize_column('method')

gen_plot(method_summary, 'method', 'Valuation method')
```



### Summarize by societal benefit area

How much to consolidate GEOSS and NASA similar (but not identical) categories?

```{r}
soc_ben_df <- includes_df %>%
  select(key, starts_with(c('GEOSS', 'NASA'))) %>%
  ### drop '(other)' if covered in another column
  mutate(`NASA app sci` = ifelse(`GEOSS soc ben` == 'Weather' & `NASA app sci` == '(other)', NA, `NASA app sci`)) %>%
  mutate(`GEOSS soc ben` = ifelse(`GEOSS soc ben` == '(other)' & `NASA app sci` != '(other)', NA, `GEOSS soc ben`)) %>%
  pivot_longer(-key, names_to = 'tmp', values_to = 'sba') %>%
  filter(!is.na(sba)) %>%
  select(-tmp) %>%
  mutate(sba = str_squish(sba)) %>%
  mutate(sba = case_when(sba == 'Water' ~ 'Water Resources',
                         sba == 'Climate' ~ 'Climate & Resilience',
                         sba == 'Weather' ~ 'Climate & Resilience',
                         sba %in% c('Biodiversity', 'Ecosystems') ~ 'Ecological Conservation',
                         sba == 'Health' ~ 'Health & Air Quality',
                         TRUE ~ sba)) %>%
  distinct()

soc_ben_summary <- soc_ben_df %>%
  summarize_column('sba')

gen_plot(soc_ben_summary, 'sba', 'Societal benefit area')
```

### Summarize by value type

```{r}
val_type_df <- includes_df %>%
  select(key, val_type = `societal benefit type`) %>%
  mutate(val_type = str_split(val_type, '[^A-z]')) %>%
  unnest(val_type) %>%
  mutate(val_type = str_trim(val_type),
         val_type = str_to_title(val_type)) %>%
  distinct()

val_type_summary <- val_type_df %>%
  summarize_column('val_type')

gen_plot(val_type_summary, 'val_type', 'Value type')
```

### Summarize by study location

```{r}
loc_df <- includes_df %>%
  select(key, location = 'study location') %>%
  pivot_longer(-key, names_to = 'tmp', values_to = 'loc') %>%
  filter(!is.na(loc)) %>%
  select(-tmp) %>%
  distinct() %>%
  mutate(loc = str_split(loc, '[^A-z ]| and ')) %>%
  unnest(loc) %>%
  filter(!loc %in% c('', 'case')) %>%
  group_by(loc) %>%
  mutate(loc = ifelse(n() == 1, 'Other', loc)) %>%
  ungroup()

loc_summary <- loc_df %>%
  summarize_column('loc') %>%
  mutate(loc = fct_relevel(loc, 'Other', after = 0))

gen_plot(loc_summary, 'loc', 'Study location')
```


## multi variable plots

### Method by value type: bar chart

```{r}
method_by_value_df <- method_df %>%
  left_join(val_type_df, by = 'key') %>%
  group_by(key) %>%
  mutate(val_wt = 1 / n_distinct(val_type)) %>%
  group_by(method, val_type) %>%
  summarize(n = sum(val_wt)) %>%
  group_by(method) %>%
  mutate(n_tot = sum(n)) %>%
  ungroup() %>%
  mutate(method = fct_reorder(str_squish(method), n_tot),
         lbl = sprintf('%s (n = %s)', method, n_tot)) %>%
  mutate(val_type = factor(val_type, levels = c('Instrumental', 'Intrinsic', 'Fundamental', 'Eudaimonistic')))
  
### high value labels on the bar; lower value to right of bar
df_hi <- method_by_value_df %>%
  filter(n_tot > max(n_tot) * .5) %>%
  select(method, lbl, n_tot) %>%
  distinct()
df_lo <- method_by_value_df %>%
  filter(n_tot <= max(n_tot) * .5) %>%
  select(method, lbl, n_tot) %>%
  distinct()

ggplot(method_by_value_df, aes(y = method, x = n)) +
  geom_col(aes(fill = val_type)) +
  # guides(fill = guide_legend(reverse = TRUE)) +
  geom_text(data = df_hi, aes(label = lbl, x = n_tot), color = 'white',
            hjust = 1, size = 3, nudge_x = -1) +
  geom_text(data = df_lo, aes(label = lbl, x = n_tot), color = 'black', 
            hjust = 0, size = 3, nudge_x = 1) +
  scale_x_continuous(expand = c(0, .01)) +
  scale_fill_viridis_d() +
  labs(x = 'Number of papers',
       y = 'Valuation method',
       fill = 'Value type') +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        legend.position = c(.75, .25))

```
### Method co occurrence

```{r}
method_vec <- levels(method_summary$method) %>% rev()
  
multi_methods_df <- method_df %>%
  mutate(method = factor(method, levels = method_vec)) %>%
  arrange(key, method) %>%
  group_by(key) %>%
  filter(n() > 1) %>%
  mutate(x = c('x', 'y')) %>%
  ungroup() %>%
  pivot_wider(names_from = x, values_from = method) %>%
  group_by(x, y) %>%
  summarize(n = n(), .groups = 'drop') %>%
  complete(x = method_vec, y = method_vec, fill = list(n = NA)) %>%
  mutate(x = factor(x, levels = method_vec),
         y = factor(y, levels = method_vec) %>% fct_rev())

diag_lbls <- multi_methods_df %>%
  filter(x == y) %>%
  select(x)


ggplot() +
  ### geom_point to set up axis labels in order
  geom_point(data = multi_methods_df %>% filter(!is.na(n)), aes(x, y), size = 0) +
  ### add grid lines
  geom_segment(data = diag_lbls, aes(x = x, xend = x, y = 1, yend = 13.25 - as.integer(x)), color = 'grey90') +
  geom_segment(data = diag_lbls, aes(y = x, yend = x, x = 0, xend = as.integer(x)), color = 'grey90') +
  geom_segment(data = diag_lbls, x = 1, y = 12, yend = 1, xend = 12, color = 'grey90') +
  ### add diagonal text
  geom_text(data = diag_lbls, aes(x = x, y = x, label = x),
            angle = 30, hjust = 0, vjust = 0, size = 3, nudge_y = .5, nudge_x = -.25) +
  ### then geom_point again to write on top of the grid lines
  geom_point(data = multi_methods_df, aes(x, y, color = n, size = n), show.legend = FALSE) +
  ### add number text
  geom_text(data = multi_methods_df %>% filter(n > 10), aes(x = x, y = y, label = n),
            size = 2, color = 'black') +
  geom_text(data = multi_methods_df %>% filter(n <= 10), aes(x = x, y = y, label = n),
            size = 2, color = 'white') +
  scale_color_viridis_c() +
  scale_size(name = 'n', range = c(3, 10)) +
  scale_x_discrete(expand = expansion(add = c(0, 6))) +
  scale_y_discrete(expand = expansion(add = c(.5, 3))) +
  ### to maintain equal spacing horiz and vert
  coord_fixed() +
  labs(x = 'Valuation method 1',
       y = 'Valuation method 2',
       fill = 'Number of papers') +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(size = 8),
        axis.text.x = element_blank())
```



### Method by societal benefit area: heat map

```{r}
method_by_sba_df <- method_df %>%
  left_join(soc_ben_df, by = 'key') %>%
  group_by(key) %>%
  mutate(sba_wt = 1 / n_distinct(sba)) %>%
  group_by(method, sba) %>%
  summarize(n = sum(sba_wt)) %>%
  group_by(method) %>%
  mutate(n_tot = sum(n)) %>%
  ungroup() %>%
  mutate(method = fct_reorder(str_squish(method), n_tot),
         lbl = sprintf('%s (n = %s)', method, n_tot)) %>%
  mutate(sba = fct_reorder(sba, n_tot) %>% fct_relevel(c('(various)', '(other)'), after = Inf))

ggplot(method_by_sba_df, aes(y = method, x = sba, fill = n)) +
  geom_tile() +
  # geom_text(aes(label = n), color = 'white') +
  scale_fill_viridis_c() +
  labs(x = 'Societal benefit area',
       y = 'Valuation method',
       fill = 'Number of papers') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

