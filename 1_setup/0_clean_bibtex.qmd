---
title: 'Systematic Map: Clean bibtex records'
format: 
  html:
    code-fold: true
    code-summary: "Show me the code"
execute:
  echo: true
  warning: false
  message: false
editor: source
---

```{r setup}
library(tidyverse)
library(tidytext)
library(bib2df)
library(here)

source(here('common_fxns.R'))
```

# Summary

This script will ingest Bibtex files of records and:

* clean up the bibtex for idiosyncratic formatting
* check for and resolve duplicated records
* from Web of Science, Scopus, and the CONVEI Zotero Library

# Methods

## Cleaning the bibtex from the CONVEI Zotero library

This is already pretty clean... no real processing required!

```{r clean bibtex from zotero library}
bib_raw_fs <- list.files(here('_data/bibtex_raw'), pattern = 'zot.+.bib$', full.names = TRUE)
for(f in bib_raw_fs) {
  # f <- bib_raw_fs[1]
  bib_raw <- read_file(f)
  bib_clean <- str_replace_all(bib_raw, '(\\r)?\\n   ', ' ')
  f_out <- str_replace(f, '_raw', '_clean')
  write_file(bib_clean, f_out)
}
```

## Cleaning the bibtex from Web of Science

The Web of Science records contain line breaks that disrupt the ability of the `bib2df` package to work properly. Replace those problematic line breaks (a carriage return `\r`, followed by a line break `\n`, followed by a three-space indentation) with a single blank space.

```{r clean bibtex from web of science naive search}
bib_raw_fs <- list.files(here('_data/bibtex_raw'), pattern = 'wosnaive.+.bib$', full.names = TRUE)
bib_clean <- lapply(bib_raw_fs, 
              FUN = function(f) {
                bib_raw <- read_file(f)
                bib_clean <- str_replace_all(bib_raw, '(\\r)?\\n   ', ' ')
              }) %>%
  paste0(collapse = '\\n\\n')
f_out <- here('_data/bibtex_clean', 'wos_naive.bib')
write_file(bib_clean, f_out)
```

```{r clean bibtex from web of science full search}
bib_raw_fs <- list.files(here('_data/bibtex_raw'), pattern = 'wos_.+.bib$', full.names = TRUE)
bib_clean <- lapply(bib_raw_fs, 
              FUN = function(f) {
                bib_raw <- read_file(f)
                bib_clean <- str_replace_all(bib_raw, '(\\r)?\\n   ', ' ')
              }) %>%
  paste0(collapse = '\\n\\n')
f_out <- here('_data/bibtex_clean', 'wos.bib')
write_file(bib_clean, f_out)
```

## Cleaning the records from SCOPUS

The SCOPUS records start with a export date notice; let's drop that.  Also, to avoid warning, add a blank line at the end:

```
Warning message:
In readLines(file) :
  incomplete final line found on '/Users/caseyohara/github/convei_systematic_map/_data/bibtex_clean/scopus.bib'
```

```{r check scopus for malformed entries}
#| eval: false
bib_check_fs <- list.files(here('_data/bibtex_clean'), pattern = 'scop.+.bib$', full.names = TRUE)

bib_check <- read_file(bib_check_fs[1])

at_vec <- str_extract_all(bib_check, '@[a-zA-Z]+(?=\\{)') %>% unlist()
# table(at_vec)
### 11887 instances of @ARTICLE, @BOOK, @CONFERENCE

test_df <- bib2df::bib2df(bib_check_fs[1]) %>%
  janitor::clean_names()
### only 11769 articles listed... missing 118 articles?

### Check for first line: @DOCTYPE{bibtex_key,
check_vec1 <- str_extract_all(bib_check, '@[a-zA-Z]+\\{.+(?=\n)') %>% unlist()
### the À-ž allows for upper/lower diacritics - 11887 results

df <- data.frame(t = check_vec1) %>%
  mutate(bibtexkey = str_remove_all(t, '.+\\{|,'))
# n_distinct(df$bibtexkey) ### 10998 unique bibtex keys...

missing_df <- df %>%
  anti_join(test_df, by = 'bibtexkey')
```

Additionally, with the above code (not run) a few entries were found that are missing a line break after the previous entry - e.g.,

```
   ... <previous entry stuff>
}@ARTICLE{Liu2023238,      <-- missing a line break here!
   ... <faulty entry stuff>
```

```{r clean bibtex from scopus}
bib_raw_fs <- list.files(here('_data/bibtex_raw'), pattern = 'scop.+.bib$', full.names = TRUE)
for(f in bib_raw_fs) {
  # f <- bib_raw_fs[1]
  bib_raw <- read_file(f)
  first_at <- str_locate(bib_raw, '@')[1]
  bib_clean <- bib_raw %>%
    ### keep everything from the first @ and go to the end
    str_sub(start = first_at, end = - 1) %>%
    # str_replace_all('(\\r)?\\n   ', ' ') %>%
    str_replace_all('\\}@', '}\n@')
  bib_clean <- paste0(bib_clean, '\n')
  
  f_out <- str_replace(f, '_raw', '_clean')
  write_file(bib_clean, f_out)
}
```