---
title: "Screen a sample of predictions from round 3"
author: "O'Hara"
format: 
  html:
    code-fold: true
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
editor: source
---


```{r setup}
library(tidyverse)
library(here)
library(synthesisr)
```

## Load fulltext results

Load the fulltext results, the Colandr results, and the predictions.

```{r}
fulltext_df <- read_csv(here('_output/phase4_classifier', 
                         'fulltext_screened.csv')) %>%
  select(key, ft_screen = screening_decision, ft_reason = reason_for_exclusion, notes)

colandr_df <- read_csv(here('_data/4_colandr_screened/colandr_companion_excl_241122.csv')) %>%
  bind_rows(read_csv(here('_data/4_colandr_screened/colandr_companion_incl_241122.csv'))) %>%
  janitor::clean_names() %>%
  filter(date_screened_t_a > as.Date('2024-11-01')) %>%
  left_join(read_csv(here('_data/3_refs_clean/ref_key_lookup.csv'))) %>%
  select(title, author, year, abstract, key, col_screen = t_a_status, col_reason = t_a_exclusion_reasons)

pred_df <- read_csv(here('_data/5d_classifier_round2/predicted_classifier_round2_set.csv')) %>%
  select(key, pred_include = classification_prediction)

```


## Combine datasets

Combine Colandr and fulltext screening information into a single dataframe; compare final screening results to predictions.

```{r}
result_df <- colandr_df %>%
  left_join(fulltext_df, by = 'key') %>%
  left_join(pred_df, by = 'key') %>%
  mutate(ft_screen = ifelse(is.na(ft_screen), 'exclude', ft_screen)) %>%
  mutate(include = ft_screen == 'include')

table(result_df %>% select(pred_include, include))

odd_out <- result_df %>%
  filter(include & !pred_include)
```

## Gather into training set for round 2

## Load all citations

Load the training set for the first pass of the classifier and update with the added screened refs.

```{r}
training2_df <- read_csv(here('int/classifier_round2_training_set.csv'))

training3_df <- result_df %>%
  mutate(src = 'class_round2') %>%
  bind_rows(training2_df) %>%
  select(title, author, year, abstract, key, include, src, notes) %>%
  distinct()

write_csv(training3_df, here('int/classifier_round3_training_set.csv'))

```

Identify the remaining unscreened citations from Scopus and the Web of Science.  Bind the two datasets, and filter out any instances that appear in the `training3_df`, using the key column.

```{r}
scopus_df <- read_refs(here('_data/3_refs_clean/scopus_clean_240204.ris')) %>%
  rename(key = notes)
wos_df <- read_refs(here('_data/3_refs_clean/wos_clean_240126.ris')) %>%
  rename(key = notes)

refs_df <- bind_rows(scopus_df, wos_df) %>%
  anti_join(training3_df, by = 'key') %>%
  select(title, abstract, key)

write_csv(refs_df, here('int/classifier_round3_set.csv'))

### status 127 - can't find function `zip` on Windows - install RTools (outside of R)
zip(zipfile = here('int/classifier_round3_set.zip'), files = here('int/classifier_round3_set.csv'))
```


