---
title: "Sankey diagram of includes/excludes by phase"
author: "O'Hara"
format: 
  html:
    code-fold: true
    embed-resources: true
execute:
  echo: true
  warning: false
  message: false
editor: source
---

```{r setup}
library(tidyverse)
library(here)
library(networkD3)

```

# Summary

Load refs at various phases.  Include:

* SBR start
* Training set start
* Classification set start

* Colandr includes
* Colandr excludes
* Colandr not loaded (deprioritized)

* Full text includes
* Full text excludes
* Full text not done

```{r}
col_df <- read_csv(here('_data/screened_colandr/colandr_by_phase_2024-12-01.csv')) %>%
  mutate(phase = case_when(phase == 'classifier round 1' ~ 'training',
                           phase == 'early' ~ 'training',
                           phase == 'sample 1000' ~ 'training',
                           str_detect(phase, 'class') ~ 'pred_incl',
                           TRUE ~ phase)) %>%
  group_by(phase, screening_status) %>%
  summarize(n = n(), .groups = 'drop')

ft_fs <- list.files(here('_data/screened_fulltext'), pattern = '_fulltext_', full.names = TRUE) 
ft_df <- ft_fs %>%
  lapply(read_csv) %>%
  setNames(str_remove_all(basename(ft_fs), '._fulltext_|.csv')) %>%
  bind_rows(.id = 'phase') %>%
  mutate(phase = case_when(phase == 'classifier_round1' ~ 'training',
                           phase == 'early' ~ 'training',
                           phase == 'sample1000' ~ 'training',
                           str_detect(phase, 'class') ~ 'pred_incl',
                           TRUE ~ phase)) %>%
  group_by(phase, screening_decision) %>%
  summarize(n = n(), .groups = 'drop')

pred_round2 <- read_csv(here('_data/5_screen_classifier_round2',
                             'predicted_classifier_round2_set.csv'))
table(pred_round2$classification_prediction)

total <- read_csv(here('_data/1c_refs_clean/ref_key_lookup.csv'))
col_ct <- sum(col_df$n)
ft_ct <- sum(ft_df$n)
```


```{r}
links <- tribble(
  ~source,            ~target,            ~value,
  'Soc Benefit Repo (n = 260)',     'Colandr includes (n = 541)',   131,
  'Soc Benefit Repo (n = 260)',     'Colandr excludes (n = 1505)',  129,
  'Training set (n = 1077)',        'Colandr includes (n = 541)',   147,
  'Training set (n = 1077)',        'Colandr excludes (n = 1505)',  930,
  'Predicted includes (n = 2148)',  'Colandr includes (n = 541)',   284,
  'Predicted includes (n = 2148)',  'Colandr excludes (n = 1505)',  446,
  'Predicted includes (n = 2148)',  'Colandr TBD (n= 2418)',       1418,
  'Predicted excludes (n = 10384)', 'Not screened (n = 9384)',     9384,
  'Predicted excludes (n = 10384)', 'Colandr TBD (n= 2418)',       1000,
  'Colandr includes (n = 541)',     'Fulltext includes (n = 174)',  174,
  'Colandr includes (n = 541)',     'Fulltext excludes (n = 367)',  367,
  'Colandr TBD (n= 2418)',          'Expected includes (n = 99)',   99,
  'Colandr TBD (n= 2418)',          'Expected excludes (n = 2319)', 2319) %>%
  arrange(value) %>%
  mutate(source = fct_inorder(source)) %>%
  group_by(source) %>%
  mutate(n = sum(value)) %>%
  ungroup()
 
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
  name=c(as.character(links$source), 
  as.character(links$target)) %>% unique()
)
 
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1 
links$IDtarget <- match(links$target, nodes$name)-1
 
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
              Source = "IDsource", Target = "IDtarget",
              Value = "value", NodeID = "name", 
              fontSize = 14, fontFamily = 'Arial',
              sinksRight=FALSE)
p

# save the widget
# library(htmlwidgets)
# saveWidget(p, file=paste0( getwd(), "/HtmlWidget/sankeyBasic1.html"))
```

```{r}
URL <- paste0('https://cdn.rawgit.com/christophergandrud/networkD3/',
              'master/JSONdata/energy.json')
energy <- jsonlite::fromJSON(URL)

# Plot
sankeyNetwork(Links = energy$links, Nodes = energy$nodes, Source = 'source',
             Target = 'target', Value = 'value', NodeID = 'name',
             units = 'TWh', fontSize = 12, nodeWidth = 30)

# Colour links
energy$links$energy_type <- sub(' .*', '',
                               energy$nodes[energy$links$source + 1, 'name'])

sankeyNetwork(Links = energy$links, Nodes = energy$nodes, Source = 'source',
             Target = 'target', Value = 'value', NodeID = 'name',
             LinkGroup = 'energy_type', NodeGroup = NULL)

```

